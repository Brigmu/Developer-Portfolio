{"version":3,"sources":["Components/Nav/Nav.js","Components/Container/Container.js","Components/Wrapper/Wrapper.js","Components/Card/Card.js","Components/CardImg/index.js","Components/CardInfo/index.js","Components/Navlink/Navlink.js","Components/Title/Title.js","Components/ViewBtn/ViewBtn.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","className","Container","Wrapper","name","id","children","Card","CardImg","alt","src","source","CardInfo","title","text","href","deployed","github","Navlink","link","Title","ViewBtn","data-card","card","onClick","handleCardClick","App","useState","class","active","shareishCard","setShareishCard","craveItCard","setCraveItCard","headcountCard","setHeadcountCard","employeeDirectoryCard","setEmployeeDirectoryCard","googleBooksCard","setGoogleBooksCard","handleCardImgClassChange","e","target","getAttribute","console","log","gihub","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2a88a544.chunk.js","sourcesContent":["import React from 'react'\r\nimport './styles.css';\r\n\r\nconst Nav = (props) => {\r\n    return (\r\n        <nav className='navbar color-primary' {...props} />\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst Container = (props) => {\r\n    return (\r\n        <div className='container' {...props} />\r\n    )\r\n}\r\n\r\nexport default Container;","import React from 'react';\r\nimport './styles.css';\r\n\r\nexport const Wrapper = (props) => {\r\n    return (\r\n        <div className = {`wrapper ${props.name}`}>\r\n            <span id={props.id} className='offset'></span>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wrapper;","import React from 'react'\r\nimport './styles.css';\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className = 'card' {...props} />\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport './styles.css';\r\n\r\nconst CardImg = (props) => {\r\n    return(\r\n        <img className='card-img' alt = '' src = {props.source} {...props} />\r\n    )\r\n}\r\n\r\nexport default CardImg;","import React from 'react'\r\nimport './styles.css';\r\n\r\nconst CardInfo = (props) => {\r\n    return (\r\n        <div className='card-info'>\r\n            <h1>{props.title}</h1>\r\n            {props.text}\r\n            <a href={props.deployed}>App</a>\r\n            <a href={props.github}>Github</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardInfo;","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst Navlink = (props) => {\r\n    return (\r\n        <div className = 'navlink'>\r\n            <a href = {props.link}>{props.title}</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navlink;","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst Title = (props) => {\r\n    return (\r\n    <div className = 'title'>\r\n        <h1>{props.title}</h1>\r\n        <hr></hr>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst ViewBtn = (props) => {\r\n    return(\r\n        <button className={props.name} data-card={props.card} onClick={props.handleCardClick}>{props.text}</button>\r\n    )\r\n}\r\n\r\nexport default ViewBtn;","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Nav from './Components/Nav/Nav';\r\nimport Container from './Components/Container/Container';\r\nimport Wrapper from './Components/Wrapper/Wrapper';\r\nimport Card from './Components/Card/Card';\r\nimport CardImg from './Components/CardImg/index';\r\nimport CardInfo from './Components/CardInfo';\r\nimport Navlink from './Components/Navlink/Navlink';\r\nimport Title from './Components/Title/Title';\r\nimport ViewBtn from './Components/ViewBtn/ViewBtn';\r\n\r\nfunction App() {\r\n  const [shareishCard, setShareishCard] = useState({class: 'card-img', active: false})\r\n  const [craveItCard, setCraveItCard] = useState({class: 'card-img', active: false})\r\n  const [headcountCard, setHeadcountCard] = useState({class: 'card-img', active: false})\r\n  const [employeeDirectoryCard, setEmployeeDirectoryCard] = useState({class: 'card-img', active: false})\r\n  const [googleBooksCard, setGoogleBooksCard] = useState({class: 'card-img', active: false})\r\n\r\n  const handleCardImgClassChange = (e) => {\r\n    const card = e.target.getAttribute('data-card');\r\n    switch(card){\r\n      case 'shareish':\r\n        if(shareishCard.active){\r\n          setShareishCard({class: 'card-img', active: false})\r\n        } else {\r\n          setShareishCard({class: 'card-img-active', active: true})\r\n        }\r\n      break;\r\n      case 'headcount':\r\n        if(headcountCard.active){\r\n          setHeadcountCard({class: 'card-img', active: false})\r\n        } else{\r\n          setHeadcountCard({class: 'card-img-active', active: true})\r\n        }\r\n      break;\r\n      case 'craveit':\r\n        if(craveItCard.active){\r\n          setCraveItCard({class: 'card-img', active: false})\r\n        } else {\r\n          setCraveItCard({class: 'card-img-active', active: true})\r\n        }\r\n      break;\r\n      case 'googlebooks':\r\n        if(googleBooksCard.active){\r\n          setGoogleBooksCard({class: 'card-img', active: false})\r\n        } else {\r\n          setGoogleBooksCard({class: 'card-img-active', active: true})\r\n        }\r\n      break;\r\n      case 'employeedirectory':\r\n        if(employeeDirectoryCard.active){\r\n          setEmployeeDirectoryCard({class: 'card-img', active: false})\r\n        } else {\r\n          setEmployeeDirectoryCard({class: 'card-img-active', active: true})\r\n        }\r\n      break;\r\n      default:\r\n        console.log('oops');\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n        <Nav>\r\n          <Navlink link='#about' title='About' />\r\n          <Navlink link='#portfolio' title='Portfolio' />\r\n          <Navlink link='#contact' title='Contact' />\r\n        </Nav>\r\n        <Container>\r\n          \r\n          <Wrapper name='about-wrapper' id='about'>\r\n            <Title title='About' />\r\n            <div className='inner-wrapper'>\r\n            <img src='images/Portfolio-photo.jpg' alt='profile'></img>\r\n            <div className='p-div'>\r\n            <p>My name is Brigham Mueller and this website was made to tell a little bit about myself and show what\r\n                    I can do. I am a full-stack web developer, gamer, home chef, and dad joke extraordinaire.\r\n                    Coding and designing have always been something that have peaked my interest as a way to explore my\r\n                    creative side while still being a relevant way to make a living. Outside of my time learning and\r\n                    growing my coding experience you can find me, as mentioned, two places: on the computer gaming or in\r\n                    the kitchen.\r\n                    Gaming for me has always been a way to be competitive and enjoy myself at the same time. It was also\r\n                    how I connected with a lot of my siblings and gave us a means to spend time together.\r\n                    My time in the kitchen is often spent trying new recipes or perfecting ones I already know. I get a\r\n                    lot of satisfactin out of the enjoyent that other people get when they eat what I have made.\r\n                </p>\r\n                <p>Aside from my 3 main interests I love to play soccer, travel, and hang out with my family. Family is\r\n                    super important to me and I try to spend as much time with them as I can. We love to play board\r\n                    games, word games, video games, or pretty much anything where we can have a good time together.\r\n                    I have traveled many places around the world including: China, Ukraine, Costa Rica, Belize, Mexico,\r\n                    and Canada. My family is really into soccer and I personally played for about 13 years growing up on\r\n                    very competitive teams.\r\n                </p>\r\n                <p>Beyond my personal interests, I am a very logical person who likes to think through pretty much\r\n                    everything I do. I believe in being a kind person to everyone around me and try to help out as much\r\n                    as I can.</p>\r\n                  </div>\r\n              </div>\r\n          </Wrapper>\r\n          <Wrapper name='portfolio-wrapper' id='portfolio'>\r\n            <Title title='Portfolio' />\r\n            <div className='cards-wrapper'>\r\n            <Card>\r\n              <CardImg className={shareishCard.class} source='images/shareishsnipped.png' />\r\n              <CardInfo title='Shareish' text='Shareish is an app that allows users to rent out and rent unused items such as tools, electronics, yard equipment, etc.' gihub='https://github.com/Brigmu/Sharemasters' deployed='https://ancient-crag-34328.herokuapp.com/' />\r\n              {shareishCard.active ? <ViewBtn card='shareish' name='button view-less' text='View less' handleCardClick={handleCardImgClassChange}/> : <ViewBtn card='shareish' name='button view-more' text='View info' handleCardClick={handleCardImgClassChange}/> }\r\n            </Card>\r\n            <Card>\r\n              <CardImg className= {craveItCard.class} source='images/craveitsnipped.png' />\r\n              <CardInfo title ='Crave it' text='Crave it is an app that allows users to search for food recipes by category' github='https://github.com/crispysodium/crave_masters' deployed='https://crispysodium.github.io/crave_masters/'/>\r\n              {craveItCard.active ? <ViewBtn card='craveit' name='button view-less' text='View less' handleCardClick={handleCardImgClassChange}/> : <ViewBtn card='craveit' name='button view-more' text='View info' handleCardClick={handleCardImgClassChange}/> }\r\n            </Card>\r\n            <Card>\r\n              <CardImg className={headcountCard.class} source='images/Headcountmanagersnipped.png' />\r\n              <CardInfo title='Headcount Manager' text='Headcount manager is an app for tracking headcount at a company by country and department' github='https://github.com/macheson/headcount-tracker/' deployed='https://dry-waters-35769.herokuapp.com/'/>\r\n              {headcountCard.active ? <ViewBtn card='headcount' name='button view-less' text='View less' handleCardClick={handleCardImgClassChange}/> : <ViewBtn card='headcount' name='button view-more' text='View info' handleCardClick={handleCardImgClassChange}/> }\r\n            </Card>\r\n            <Card>\r\n              <CardImg className={googleBooksCard.class} source='images/googlebookssnipped.png' />\r\n              <CardInfo title='Google Books Search' text='An app that allows the users to search google books and then save books they like to a database' github ='https://github.com/Brigmu/Google-books-search' deployed='https://mygooglebookssearch.herokuapp.com/' />\r\n              {googleBooksCard.active ? <ViewBtn card='googlebooks' name='button view-less' text='View less' handleCardClick={handleCardImgClassChange}/> : <ViewBtn card='googlebooks' name='button view-more' text='View info' handleCardClick={handleCardImgClassChange}/> }\r\n            </Card>\r\n            <Card>\r\n              <CardImg className={employeeDirectoryCard.class} source='images/employeedirectorysnipped.png' />\r\n              <CardInfo title='Employee Directory' text='This is a practice app testing out react state to manage an directory of employees' github='https://github.com/Brigmu/Employee-Directory' deployed='https://brigmu.github.io/Employee-Directory/' />\r\n              {employeeDirectoryCard.active ? <ViewBtn card='employeedirectory' name='button view-less' text='View less' handleCardClick={handleCardImgClassChange}/> : <ViewBtn card='employeedirectory' name='button view-more' text='View info' handleCardClick={handleCardImgClassChange}/> }\r\n            </Card>\r\n            </div>\r\n          </Wrapper>\r\n          <Wrapper name='contact-wrapper' id='contact'>\r\n            <Title title='Contact' />\r\n            <div className = 'contact-wrapper'>\r\n            <h3>Personal Info</h3>\r\n                <p>Email: brigmu@gmail.com</p>\r\n                <p>Phone: 206-734-8405</p>\r\n                <a href = \"https://docs.google.com/document/d/1opgLrcQpAW3ns2WTNB-I0QWtOADd9Hpc9dRN0SPXduI/edit?usp=sharing\">Resume</a>\r\n                <h3>Socials</h3>\r\n                <img src=\"images/GitHub-Mark-32px.png\" id='Github' alt='gitub-logo'/>\r\n                <a href=\"https://github.com/Brigmu\">brigmu</a>\r\n                <img src=\"images/LI-Logo.png\" id='linkedin' alt='linkedin-logo'/>\r\n                <a href=\"https://www.linkedin.com/in/brigham-mueller-709817197/\">Brigham Mueller</a>\r\n            </div>\r\n          </Wrapper>\r\n        </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}